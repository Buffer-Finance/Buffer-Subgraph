enum Period {
    hourly
    daily
    weekly
    total
}

type OptionContract @entity {
    id: Bytes!
    address: Bytes
    asset: String
    isPaused: Boolean
    openUp: Int
    openDown: Int
    openInterest: BigInt!
    tradeCount: Int!
    volume: BigInt!
    currentUtilization: BigInt
    token: String
    payoutForUp: BigInt
    payoutForDown: BigInt
}

type User @entity {
    id: Bytes!
    address: Bytes!
}

type QueuedOptionData @entity {
    id: String!
    optionContract: OptionContract!
    strike: BigInt
    totalFee: BigInt
    user: User
    state: Int
    isAbove: Boolean
    queueID: BigInt
    slippage: BigInt
    depositToken: String
    reason: String
    cancelTimestamp: BigInt!
    queueTimestamp: BigInt!
}

type UserOptionData @entity {
    id: String!
    optionContract: OptionContract!
    optionID: BigInt
    strike: BigInt
    totalFee: BigInt!
    user: User!
    creationTime: BigInt
    expirationPrice: BigInt
    payout: BigInt
    state: Int
    amount: BigInt!
    expirationTime: BigInt
    isAbove: Boolean
    depositToken: String
    queueID: BigInt
    settlementFee: BigInt
}

type NFT @entity {
    id: String!
    tokenId: BigInt!
    owner: Bytes!
    tier: String!
    nftImage: String!
    ipfs: String!
    batchId: BigInt!
    hasRevealed: Boolean!
    claimTimestamp: BigInt
    phaseId: BigInt
}

type NFTBatch @entity {
    id: String!
    tokenIds: [BigInt!]!
}
