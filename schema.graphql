type OptionContract @entity {
  id: Bytes! 
  address: Bytes
  asset: String
  isPaused : Boolean
}

type User @entity {
  id: Bytes! 
  address: Bytes!
  allTradesCount: Int
  allActiveTrades : Int
  allExpiredTrades : Int
  allExercisedTrades : Int
}

type QueuedOptionData @entity {
  id: String! 
  optionContract : OptionContract!
  strike: BigInt
  totalFee: BigInt
  user : User
  state : Int
  isAbove : Boolean
  queueID : BigInt
  slippage : BigInt
  depositToken : String
  reason : String
}


type UserOptionData @entity {
  id: String! 
  optionContract : OptionContract!
  optionID: BigInt
  strike: BigInt
  totalFee: BigInt
  user : User!
  creationTime : BigInt
  expirationPrice : BigInt
  payout : BigInt
  state : Int
  amount : BigInt
  expirationTime : BigInt
  isAbove : Boolean
  depositToken : String
  queueID : BigInt
  settlementFee : BigInt
}


type ReferralData @entity {
  id: Bytes! 
  user : User!
  totalTradesReferred : Int!
  totalVolumeOfReferredTrades : BigInt!
  totalRebateEarned : BigInt!
  totalTradingVolume : BigInt!
  totalDiscountAvailed : BigInt!
}


type OptionStat @entity {
  id: String! 
  currentAbovePositions : BigInt!
  currentBelowPositions : BigInt!
  totalVolume : BigInt!
  totalSettlementFees : BigInt!
}