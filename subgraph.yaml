specVersion: 0.0.4
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: BufferBinaryOptions
    network: arbitrum-goerli
    source:
      address: '0xE85B5FDCF387Ff701EbBfEC92174510748d56215'
      abi: BufferBinaryOptions
      startBlock: 130000 
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - UserOptionData
      abis:
        - name: BufferBinaryOptions
          file: ./abis/BufferBinaryOptions.json
      eventHandlers:
        - event: Create(indexed address,indexed uint256,uint256,uint256)
          handler: handleCreate
        - event: Expire(indexed uint256,uint256,uint256)
          handler: handleExpire    
        - event: Exercise(indexed address,indexed uint256,uint256,uint256)
          handler: handleExercise  
        - event: UpdateReferral(address,address,bool,uint256,uint256,uint256,string)
          handler: handleUpdateReferral 
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: BufferRouter
    network: arbitrum-goerli
    source:
      address: '0xb7CEBC382B8A0bf7ecB98FEA7d6B5E65125d58b1'
      abi: BufferRouter
      startBlock: 130000 
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - UserOptionData
      abis:
        - name: BufferRouter
          file: ./abis/BufferRouter.json
      eventHandlers:
        - event: InitiateTrade(indexed address,uint256,uint256)
          handler: handleInitiateTrade
        - event: CancelTrade(indexed address,uint256,string)
          handler: handleCancelTrade    
        - event: OpenTrade(indexed address,uint256,uint256)
          handler: handleOpenTrade    
      file: ./src/mapping.ts