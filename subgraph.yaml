specVersion: 0.0.6
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: BufferBinaryOptions
    network: arbitrum-one
    source:
      abi: BufferBinaryOptions
      startBlock: 56585555
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - UserOptionData
        - OptionContract
        - User
      abis:
        - name: BufferBinaryOptions
          file: ./abis/BufferBinaryOptions.json
        - name: BinaryPool
          file: ./abis/BinaryPool.json
        - name: BufferRouter
          file: ./abis/BufferRouter.json
        - name: UniswapPool
          file: ./abis/UniswapPool.json
      eventHandlers:
        - event: Create(indexed address,indexed uint256,uint256,uint256)
          handler: handleCreate
        - event: Expire(indexed uint256,uint256,uint256)
          handler: handleExpire
        - event: Exercise(indexed address,indexed uint256,uint256,uint256)
          handler: handleExercise
        - event: UpdateReferral(address,address,bool,uint256,uint256,uint256,string)
          handler: handleUpdateReferral
        # - event: Pause(bool)
        #   handler: handlePause
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: BufferRouter
    network: arbitrum-one
    source:
      address: "0x0e0A1241C9cE6649d5D30134a194BA3E24130305"
      abi: BufferRouter
      startBlock: 56585555
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - UserOptionData
      abis:
        - name: BufferBinaryOptions
          file: ./abis/BufferBinaryOptions.json
        - name: BufferRouter
          file: ./abis/BufferRouter.json
      eventHandlers:
        - event: InitiateTrade(indexed address,uint256,uint256)
          handler: handleInitiateTrade
        - event: CancelTrade(indexed address,uint256,string)
          handler: handleCancelTrade
        - event: OpenTrade(indexed address,uint256,uint256)
          handler: handleOpenTrade
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: BinaryPool
    network: arbitrum-one
    source:
      address: "0x6Ec7B10bF7331794adAaf235cb47a2A292cD9c7e"
      abi: BinaryPool
      startBlock: 56585555
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - UserOptionData
      abis:
        - name: BinaryPool
          file: ./abis/BinaryPool.json
        - name: USDC
          file: ./abis/USDC.json
      eventHandlers:
        - event: Provide(indexed address,uint256,uint256)
          handler: handleProvide
        # - event: Withdraw(indexed address,uint256,uint256)
        #   handler: handleWithdraw
        # - event: Profit(indexed uint256,uint256)
        #   handler: handleProvide
        # - event: Loss(indexed uint256,uint256)
        #   handler: handleWithdraw
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: UniswapPool
    network: arbitrum-one
    source:
      address: "0x81c48D31365e6B526f6BBadC5c9aaFd822134863"
      abi: UniswapPool
      startBlock: 56585555
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      abis:
        - name: UniswapPool
          file: ./abis/UniswapPool.json
      entities:
        - UserOptionData
      eventHandlers:
        - event: SetFeeProtocol(uint8,uint8,uint8,uint8)
          handler: handleSetFeeProtocol
      file: ./src/mapping.ts
  # - kind: ethereum/contract
  #   name: USDC
  #   network: arbitrum-one
  #   source:
  #       address: "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8"
  #       abi: USDC
  #       startBlock: 48022251
  #   mapping:
  #       kind: ethereum/events
  #       apiVersion: 0.0.6
  #       language: wasm/assemblyscript
  #       abis:
  #           - name: USDC
  #             file: ./abis/USDC.json
  #       entities:
  #           - UserOptionData
  #       eventHandlers:
  #           - event: Transfer(indexed address,indexed address,uint256)
  #             handler: handlePause
  #       file: ./src/mapping.ts
  # - kind: ethereum/contract
  #   name: ERC20
  #   network: arbitrum-one
  #   source:
  #     address: "0x1A5B0aaF478bf1FDA7b934c76E7692D722982a6D"
  #     abi: ERC20
  #     startBlock: 25921235
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.6
  #     language: wasm/assemblyscript
  #     entities:
  #       - BFRHolder
  #       - BFRHolderBalance
  #     abis:
  #       - name: ERC20
  #         file: ./abis/ERC20.json
  #     eventHandlers:
  #       - event: Transfer(indexed address,indexed address,uint256)
  #         handler: handleTransfer
  #     file: ./src/BFRmapping.ts
